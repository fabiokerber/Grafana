Vagrant.configure('2') do |config|

    config.env.enable
    config.vm.boot_timeout = 1200

    config.vm.define 'grafana_srv' do |grafana_srv|

        grafana_srv.vm.box = 'ubuntu/focal64'
        grafana_srv.vm.hostname = 'gitlab-srv'
        grafana_srv.vm.network 'public_network', ip: ENV['GRAFANA_IP'], bridge: ENV['INTERFACE_LAN']

        grafana_srv.vm.provision 'shell', inline: 'sudo apt-get update && sudo apt-get upgrade -y'
        grafana_srv.vm.provision 'shell', inline: 'sudo timedatectl set-timezone America/Sao_Paulo'
        grafana_srv.vm.provision 'shell', inline: 'sudo cp /vagrant/files/ntpdate.sh /etc/cron.hourly/'
        grafana_srv.vm.provision 'shell', inline: 'sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -'
        grafana_srv.vm.provision 'shell', inline: 'sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"'
        grafana_srv.vm.provision 'shell', inline: 'sudo apt-get update'
        grafana_srv.vm.provision 'shell', inline: 'sudo apt-get install -y docker-ce ca-certificates curl openssh-server python ntpdate'
        grafana_srv.vm.provision 'shell', inline: 'sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose'
        grafana_srv.vm.provision 'shell', inline: 'sudo chmod +x /usr/local/bin/docker-compose'
        grafana_srv.vm.provision 'shell', inline: 'mkdir -p /home/vagrant/volumes/grafana'
        grafana_srv.vm.provision 'shell', inline: 'sudo docker network create grafana-net'
        grafana_srv.vm.provision 'shell', inline: 'ID=$(id -u)'
        grafana_srv.vm.provision 'shell', inline: 'sudo docker run -d --user $ID -v /home/vagrant/volumes/grafana/:/var/lib/grafana -p 3000:3000 --name=grafana --network=grafana-net grafana/grafana'

        grafana_srv.vm.provider 'virtualbox' do |vb|
            vb.memory = 8192
            vb.cpus = 4
            vb.name = 'grafana-srv'
            vb.customize ['modifyvm', :id, '--nicpromisc2', 'allow-all']

        end

    end

    config.vm.define 'centos_srv03' do |centos_srv03|

        centos_srv03.vm.box = 'centos/7'
        centos_srv03.vm.hostname = 'centos-srv02'
        centos_srv03.vm.network 'public_network', ip: ENV['CENTOS_SRV03'], bridge: ENV['INTERFACE_LAN']

        centos_srv03.vm.provision 'shell', inline: 'sudo timedatectl set-timezone America/Sao_Paulo'
        centos_srv03.vm.provision 'shell', inline: 'sudo cp /vagrant/files/ntpdate.sh /etc/cron.hourly/'
        centos_srv03.vm.provision 'shell', inline: 'sudo sed -i s/^SELINUX=.*$/SELINUX=permissive/ /etc/selinux/config && sudo setenforce 0'
        centos_srv03.vm.provision 'shell', inline: 'sudo systemctl stop firewalld && sudo systemctl disable firewalld'
        centos_srv03.vm.provision 'shell', inline: 'sudo yum install -y git ntpdate'
        centos_srv03.vm.provision 'shell', inline: 'sudo curl -fsSL https://get.docker.com/ | sh'
        centos_srv03.vm.provision 'shell', inline: 'sudo systemctl start docker && sudo systemctl enable docker'
        centos_srv03.vm.provision 'shell', inline: 'sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose'
        centos_srv03.vm.provision 'shell', inline: 'sudo chmod +x /usr/local/bin/docker-compose'

        centos_srv03.vm.provider 'virtualbox' do |vb|
            vb.memory = 1024
            vb.cpus = 2
            vb.name = 'centos-srv03'
            vb.customize ['modifyvm', :id, '--nicpromisc2', 'allow-all']

        end

    end

end